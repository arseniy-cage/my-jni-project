name: Build JNI with Windows NDK r16b

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        # Устанавливаем Chocolatey (пакетный менеджер для Windows)
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # Устанавливаем необходимые инструменты
        choco install -y 7zip curl

    - name: Download NDK (alternative method)
      run: |
        # Получаем cookies для авторизации (если файл доступен по ссылке)
        $headers = @{
          "Authorization" = "Bearer $env:GDRIVE_TOKEN"
        }
        
        # Альтернативный метод скачивания
        curl.exe -L -o ndk.zip "https://drive.google.com/uc?export=download&id=1ThXZY2oy-K1ycO489_9P7OO4evG4lcIT&confirm=t"
        
        # Проверяем скачанный файл
        if (!(Test-Path ndk.zip)) {
          Write-Error "Failed to download NDK!"
          exit 1
        }
        
        # Распаковываем
        7z x ndk.zip -o"$env:USERPROFILE\android-ndk-r16b" -y
        
        # Устанавливаем переменные окружения
        echo "NDK_HOME=$env:USERPROFILE\android-ndk-r16b" >> $env:GITHUB_ENV
        echo "$env:USERPROFILE\android-ndk-r16b" >> $env:GITHUB_PATH

    - name: Verify NDK installation
      run: |
        echo "NDK path: $env:NDK_HOME"
        dir "$env:NDK_HOME"
        if (Test-Path "$env:NDK_HOME\ndk-build.cmd") {
          call "$env:NDK_HOME\ndk-build.cmd" --version
        } else {
          Write-Error "ndk-build.cmd not found!"
          exit 1
        }

    - name: Build JNI
      run: |
        cd $env:GITHUB_WORKSPACE
        call "$env:NDK_HOME\ndk-build.cmd" -C . clean
        call "$env:NDK_HOME\ndk-build.cmd" -C .

    - name: Upload compiled artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jni-compiled-libraries
        path: libs/
